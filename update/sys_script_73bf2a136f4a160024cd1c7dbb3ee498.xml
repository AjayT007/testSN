<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_12281_ginnie_mae_field_review_test_question</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Finding Flag and Finding Count Update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var lowRisk;
	var mediumRisk;
	var highRisk;
	var highCashRisk;
	
	var fieldReviewNo = current.parent_question.parent_question.field_review;
	var testSampleNo = current.parent_question.parent_question;
	var questionGroup = current.parent_question;
	//gs.addInfoMessage(' fieldReviewNo ' + fieldReviewNo.getDisplayValue());
	//gs.addInfoMessage(' testSampleNo ' + testSampleNo + '  questionGroup ' + questionGroup);
	//gs.addInfoMessage(' testSampleNo ' + testSampleNo.getDisplayValue() + '  questionGroup ' + questionGroup.getDisplayValue());

	//Update totals on Field Review for all samples	
	//Low Risk
	var grFieldReviewTestQuestion = new GlideRecord('x_12281_ginnie_mae_field_review_test_question');
	grFieldReviewTestQuestion.addQuery('parent_question.parent_question.field_review', fieldReviewNo);// add field review number to query
	grFieldReviewTestQuestion.addQuery('finding_code.risk_level', 'Low');
	grFieldReviewTestQuestion.query();
	lowRisk = grFieldReviewTestQuestion.getRowCount();
	//gs.addInfoMessage('Low Count !!!  '+lowRisk);
	
	//Medium Risk
	grFieldReviewTestQuestion = new GlideRecord('x_12281_ginnie_mae_field_review_test_question');
	grFieldReviewTestQuestion.addQuery('parent_question.parent_question.field_review', fieldReviewNo);// add field review number to query
	grFieldReviewTestQuestion.addQuery('finding_code.risk_level', 'Medium');
	grFieldReviewTestQuestion.query();
	mediumRisk = grFieldReviewTestQuestion.getRowCount();
	//gs.addInfoMessage('Medium Count !!!  '+mediumRisk);
	
	//High Risk
	grFieldReviewTestQuestion = new GlideRecord('x_12281_ginnie_mae_field_review_test_question');
	grFieldReviewTestQuestion.addQuery('parent_question.parent_question.field_review', fieldReviewNo);// add field review number to query
	grFieldReviewTestQuestion.addQuery('finding_code.risk_level', 'High');
	grFieldReviewTestQuestion.query();
	highRisk = grFieldReviewTestQuestion.getRowCount();
	//gs.addInfoMessage('High Count !!!  '+highRisk);
	
	//High Cash Risk
	grFieldReviewTestQuestion = new GlideRecord('x_12281_ginnie_mae_field_review_test_question');
	grFieldReviewTestQuestion.addQuery('parent_question.parent_question.field_review', fieldReviewNo);// add field review number to query
	grFieldReviewTestQuestion.addQuery('finding_code.risk_level', 'High Cash');
	grFieldReviewTestQuestion.query();
	highCashRisk = grFieldReviewTestQuestion.getRowCount();
	//gs.addInfoMessage('High Cash Count !!!  '+highCashRisk);
	
	
	// Now, get a reference to the parent record and update the finding fields
	var grFldRev = new GlideRecord('x_12281_ginnie_mae_field_review');
	grFldRev.addQuery('sys_id', fieldReviewNo);
	grFldRev.query();
	if(grFldRev.next()) {
		grFldRev.number_of_low_risk_findings = lowRisk;
		grFldRev.number_of_medium_risk_findings = mediumRisk;
		grFldRev.number_of_high_risk_findings = highRisk;
		grFldRev.number_of_high_cash_risk_findings = highCashRisk;
		var totalFindings = lowRisk+mediumRisk+highRisk+highCashRisk;
		grFldRev.total_findings = totalFindings;
	}
	 
	//Set flag on field review
	if((lowRisk+mediumRisk+highRisk) > 0){
		grFldRev.findings = true;
	}
	else{
		grFldRev.findings = false;
	}
				
	grFldRev.update();

	//Set flag on parent.
	//gs.addInfoMessage(' Set Flag on parent !!!');
	grFieldReviewTestQuestion = new GlideRecord('x_12281_ginnie_mae_field_review_test_question');
	grFieldReviewTestQuestion.addQuery('parent_question.parent_question', testSampleNo);// add grand parent to query
	grFieldReviewTestQuestion.addQuery('parent_question', questionGroup);// add parent to query		
	grFieldReviewTestQuestion.addQuery('finding_code', '!=', null);
	grFieldReviewTestQuestion.query();
	var count = grFieldReviewTestQuestion.getRowCount();
	//gs.addInfoMessage('Hello response account not null count !!!  '+count);
	
	var grFieldReviewTestQuestionGroup = new GlideRecord('x_12281_ginnie_mae_field_review_test_question_group');
	grFieldReviewTestQuestionGroup.addQuery('sys_id', questionGroup);	 
	grFieldReviewTestQuestionGroup.query();
	//gs.addInfoMessage('Hello q group count '+ grFieldReviewTestQuestionGroup.getRowCount());
	if(grFieldReviewTestQuestionGroup.next()){
		if(count > 0){
			//gs.addInfoMessage('Hello setting parent flag to true ');
			grFieldReviewTestQuestionGroup.findings = true;	
		}
		else
			grFieldReviewTestQuestionGroup.findings = false;
		
		grFieldReviewTestQuestionGroup.update();
		//gs.addInfoMessage(' Set Flag on parent Done !!! ');
	}
	
	//Set flag on grand parent.
	grFieldReviewTestQuestionGroup = new GlideRecord('x_12281_ginnie_mae_field_review_test_question_group');
	grFieldReviewTestQuestionGroup.addQuery('parent_question', testSampleNo);
	grFieldReviewTestQuestionGroup.addQuery('findings', '=', true);
	grFieldReviewTestQuestionGroup.query();	
	count = grFieldReviewTestQuestionGroup.getRowCount();
	//gs.addInfoMessage('Hello question groups count '+ grFieldReviewTestQuestionGroup.getRowCount());
	
	var grFieldReviewTest = new GlideRecord('x_12281_ginnie_mae_field_review_test');
	//gs.addInfoMessage('Hello grand parent testSampleNo'+ testSampleNo);
	grFieldReviewTest.addQuery('sys_id', testSampleNo);
	grFieldReviewTest.query();
	//gs.addInfoMessage('row count = ' +grFieldReviewTest.getRowCount());

	if(grFieldReviewTest.next()) {
		if(count > 0){
			//gs.addInfoMessage('Hello setting grand parent flag to true');
			grFieldReviewTest.findings = true;	
		}
		else
			grFieldReviewTest.findings = false;
	}
		
	grFieldReviewTest.update();
	//gs.addInfoMessage(' Set Flag on grand parent Done !!! ');

})(current, previous);


]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-03-14 15:05:46</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>73bf2a136f4a160024cd1c7dbb3ee498</sys_id>
        <sys_mod_count>69</sys_mod_count>
        <sys_name>Finding Flag and Finding Count Update</sys_name>
        <sys_overrides/>
        <sys_package display_value="Ginnie Mae Compliance Review" source="x_12281_ginnie_mae">564fe9850f970200bc5a3a7ce1050eb6</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Ginnie Mae Compliance Review">564fe9850f970200bc5a3a7ce1050eb6</sys_scope>
        <sys_update_name>sys_script_73bf2a136f4a160024cd1c7dbb3ee498</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-04-07 21:44:28</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=73bf2a136f4a160024cd1c7dbb3ee498"/>
</record_update>
